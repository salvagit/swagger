swagger: "2.0"
info:
  version: "0.0.1"
  title: Todo API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /:
    get:
      description: "This endpoint returns all the todos acailable in the database."
      operationId: "GetAllTodos"
      parameters: []
      responses:
        200:
          description: "Array of todos"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Todo"
      x-swagger-router-controller: "GetAllTodos"
    post:
      description: "Add new Todo"
      operationId: "AddTodo"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "todo"
          description: "The Todo to by added"
          required: true
          schema:
            $ref: "#/definitions/Todo"
      responses:
        200:
          description: "Successful todo add"
          schema:
            $ref: "#/definitions/AddResponse"
      x-swagger-router-controller: "AddTodo"
  /todo/{id}:
    get:
      description: "Retrive a single todo by ID"
      operationId: "FindTodoById"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          description: "ID if the todo to get"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Todo response"
          schema:
            $ref: "#/definitions/Todo"
      x-swagger-router-controller: "FindTodoById"
    delete:
      description: "Delete a todo by Id"
      operationId: "DeleteTodoById"
      parameters:
        - name: "id"
          in: "path"
          description: "id of the todo to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        204:
          description: "todo deleted"
      x-swagger-router-controller: "DeleteTodoById"
    put:
      description: "update a single todo by id"
      operationId: "UpdateTodoById"
      parameters:
        - name: "id"
          in: "path"
          description: "Id of the todo being updated"
          required: true
          type: "integer"
          format: "int64"
        - name: "updated_todo"
          in: "body"
          description: "the updated todo"
          required: true
          schema:
            $ref: "#/definitions/Todo"
      responses:
        200:
          description: "Todo updated"
        400:
          description: "Yikes! An error!"
      x-swagger-router-controller: "UpdateTodoById"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login/{role}:
    x-swagger-router-controller: main-controller
    post:
      operationId: loginPost
      description: "Login with a particular role"
      parameters:
        - name: role
          in: path
          required: true
          type: string
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Token"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /unprotected:
    x-swagger-router-controller: main-controller
    get:
      operationId: unprotectedGet
      description: "Unprotected endpoint"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
  /protected: 
    x-swagger-router-controller: main-controller
    get:
      operationId: protectedGet
      description: "Protected endpoint, only accessible to 'admins' and 'users'"
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Resource"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Todo:
    type: "object"
    properties:
      todo_id:
        type: "integer"
        description: "Id for the todo."
      todo:
        type: "string"
        description: "The todo item."
      datecreated:
        type: "string"
        format: "date-time"
        description: "Timestamp when the todo was created. Set by server."
      author:
        type: "string"
        description: "Creator or owner of the todo"
      duedate:
        type: "string"
        format: "date-time"
        description: "When the todo is due."
      completed:
        type: "boolean"
        description: "Indicate if the todo was completed or not."
  AddResponse:
    type: "object"
    properties:
      id:
        type: "integer"
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  Authentication:
    type: object
    properties:
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
  Resource:
    type: object
    properties:
      resource:
        type: string
  Token:
    type: object
    properties:
      token:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string
